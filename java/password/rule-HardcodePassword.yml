# yamllint disable
# License: MIT (c) GitLab Inc.
# yamllint enable
---
rules:
- id: "java_password_rule-HardcodePassword"
  languages:
  - "java"
  pattern-either:
  - pattern: "new java.security.KeyStore.PasswordProtection(\"...\".toCharArray())"
  - pattern: "java.security.KeyStore.getInstance(...).load(..., \"...\".toCharArray())"
  - pattern: "(java.security.KeyStore $KS).load(..., \"...\".toCharArray())"
  - pattern: "KeyManagerFactory.getInstance(...).init(..., \"...\".toCharArray())"
  - pattern: "(KeyManagerFactory $KMF).init(..., \"...\".toCharArray())"
  - pattern: "PBEKeySpec(\"...\", ...)"
  - pattern: "PasswordAuthentication(\"...\", \"...\")"
  - pattern: "(PasswordCallback $CB).setPassword(\"...\")"
  - pattern: "KerberosKey(...,\"...\",...)"
  - pattern: "java.sql.DriverManager.getConnection(..., \"...\")"
  - pattern: "io.vertx.ext.web.handler.CSRFHandler.create(..., \"...\")"
  - pattern: "$S.setPassword(\"...\")"
  message: |
    A potential hard-coded password was identified in a hard-coded string.
    Passwords should not be stored directly in code
    but loaded from secure locations such as a Key Management System (KMS).

    The purpose of using a Key Management System is so access can be audited and keys easily
    rotated
    in the event of a breach. By hardcoding passwords, it will be extremely difficult to determine
    when or if, a key is compromised.

    The recommendation on which KMS to use depends on the environment the application is running
    in:

    - For Google Cloud Platform consider [Cloud Key Management](https://cloud.google.com/kms/docs)
    - For Amazon Web Services consider [AWS Key Management](https://aws.amazon.com/kms/)
    - For on premise or other alternatives to cloud providers, consider [Hashicorp's
    Vault](https://www.vaultproject.io/)
    - For other cloud providers, please see their documentation
  severity: "ERROR"
  metadata:
    shortDescription: "Use of hard-coded password"
    category: "security"
    cwe: "CWE-259"
    owasp:
    - "A2:2017-Broken Authentication"
    - "A07:2021-Identification and Authentication Failures"
    technology:
    - "java"
    security-severity: "High"