# yamllint disable
# License: MIT (c) GitLab Inc.
# yamllint enable
---
rules:
- id: "java_endpoint_rule-HostnameVerifier"
  languages:
  - "java"
  message: |
    The `HostnameVerifier` has been set to always return `true`. This effectively 
    disables the validation of server or client certificates. This could allow an 
    adversary who is in between the application and the target host to launch a Man 
    in the middle attack (MITM) i.e intercept potentially sensitive information or 
    inject malicious content into the communication stream.

    To mitigate this vulnerability and enhance the security of your application, it is 
    strongly advised to adhere to the default HostnameVerifier settings. This ensures 
    that the validation mechanism remains intact, providing a crucial layer of security 
    against unauthorized interception and data manipulation.

    Implementing the default HostnameVerifier can be achieved with the following code 
    snippet:
    ```
    // Use the default HostnameVerifier
    HttpsURLConnection connection = (HttpsURLConnection) url.openConnection();
    connection.setHostnameVerifier(HttpsURLConnection.getDefaultHostnameVerifier());
    ```
    For more information on TLS security, refer the following OWASP documentation:
    https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html
  metadata:
    shortDescription: "Improper certificate validation"
    category: "security"
    cwe: "CWE-295"
    owasp:
    - "A6:2017-Security Misconfiguration"
    - "A05:2021-Security Misconfiguration"
    security-severity: "MEDIUM"
  patterns:
  - pattern-inside: |
      class $V implements HostnameVerifier {
        ...
      }
  - pattern-either:
    - pattern: |
        boolean verify(...) {
          ...
          return true;
          ...
        }
  - pattern-not:
      patterns:
      - pattern: |
          boolean verify(...) {
              ...
              return $VAR;
              ...
            }
      - metavariable-regex:
          metavariable: $VAR
          regex: ^((?!true).)*$
      - pattern-not: |
          boolean verify(...) {
              $VAR = true;
              ...
              return $VAR;
              ...
            }
  severity: "WARNING"
